version: '3'

services:
  node-app:
    build:
      context: ./docker/node-app
      args:
        NODE_VERSION: 16
      dockerfile: Dockerfile
    command: bash
    <<: &default
      image: strapi_next_template/node-app
  strapi-app:
    <<: *default
    user: "1000:1000"
    container_name: strapi-app
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_OPTIONS=--max_old_space_size=2048
      - NODE_ENV=${APP_ENV:-development}
      - DATABASE_CLIENT=postgres
      - DATABASE_NAME=${DATABASE_NAME:-strapi}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-strapi}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-strapi}
      - APP_KEYS=${APP_KEYS:-someSecret,anotherSecret}
    command: >
      /bin/sh -c "
        if [ ${APP_ENV:-development} = \"production\" ]; then yarn build && yarn start; else yarn dev; fi
      "
    volumes:
      - ./apps/strapi-app:/srv/app
    ports:
      - '1337:1337'
    depends_on:
      - postgres
  postgres:
    image: postgres
    env_file: .env
    container_name: postgres
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-strapi}
      - POSTGRES_USER=${DATABASE_USERNAME:-strapi}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-strapi}
    ports:
      - '5432:5432'
    volumes:
      - ./dbs/postgres:/var/lib/postgresql/data
  next-app:
    <<: *default
    user: "1000:1000"
    environment:
      - NODE_ENV=${APP_ENV:-development}
      - SERVER_STRAPI_URL=http://strapi-app:1337/}
      - PUBLIC_STRAPI_URL=${PUBLIC_STRAPI_URL:-http://127.0.0.1:1337}
      - APP_ENV=${APP_ENV:-development}
    command: >
      /bin/sh -c "
        if [ ${APP_ENV:-development} = \"production\" ]; then yarn build && yarn start; else yarn dev; fi
      "
    ports:
      - '3000:3000'
    volumes:
      - ./apps/next-app:/srv/app